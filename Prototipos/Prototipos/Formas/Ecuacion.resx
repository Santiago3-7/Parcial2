<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>